템플릿 폴더 만들기
        -첫번째: 프로젝트 루트 폴더에 templates 폴더를 만들어서 사용 -> setting.py -> 템플릿 경로 추가하여 사용.
        -두번째: 생성한 앱(App)쪽 바로 하위에다가 -> templates 폴더를 만들어서 사용 -> 앱별로 템플릿 사용이 가능 -> 이게 더 편함.
        -정리하면, django는 템플릿 폴더 인식하는 방식이 여러 가지이다.
        -즉, onememo 앱의 경우 하위에 templates 폴더 생성하면 별다를 설정없이 바로 템플릿 디렉토리 인식.
        -서버 재시작도 필요.(python manage.py runserver)



DB 터미널에서 조작:
      - python manage.py dbshell로 입장
      - select * from onememos_memo; -> 관리자모드에서 onememos에 생성된 글 나옴
      - *** 테이블명은 models.py에 class memo라고 했다고 memo아님...
      - *** onememos_memo -> 앱이름_ 을 붙여줘야됨.
      - UPDATE onememos_memo SET memo_text = 'who are you?' WHERE id=1; (수정도 가능)


html 작성까지 하고 local->onememo에서 입력후 버튼을 눌러서 createMemo로 이동하면
CSRF token missing 오류가 남 ??
CSRF = Cross Site Request Forgery(fake) -> 가짜로 요청을 넣는 행위. 방지하기 위해 token발행. (csrf_token)
요청을 넣을때 token을 같이 전송.

가짜 요청을 방지하기 위한 (장고의)템플릿 태그 = ({%csrf_token%}

csrf_token %}
CSRF:
     CSRF(Cross Site Request Forgery)
     특정 사용자가 접속하여 요청값을 보낸 것처럼 글 작성.
     즉, 위조된 요청 액션을 보내 악의적으로 요청을 이용하는 행위
     EX) iframe 등을 몰래 삽입하여 로그인한 사용자가 본인도 모르게 글 작성을 요청넣는 것처럼 하는 행위.
장고 대비책:
     방법은 여러가지 있음. 장고에서는 편리하게 토큰이용
     장고 프레임워크에서는 이러한 CSRF 공격에 대한 방어로 ->csrf_token을 이용
     csrf_token 발급은 값이 매번 변경 -> 전송된 token을 통해 -> view가 호출되기 전 유효성 검증.
     POST 방식을 사용하는 템플릿 from 태그쪽에 {% csrf_token %} 사용 (아래 / 옆 상관 X)

